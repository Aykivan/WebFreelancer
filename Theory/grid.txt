fit-content() - ограничивает колонку до значения в скобках
0.1fr если прописыввать значения fr через 0., то элементы не будут автоматически растягиваться во всю ширину

Оптимальная запись:
grid-template-columns: repeat(3, 1fr); - 3 колонки по 1fr

Имена областей:
grid-template-areas: "header header" - шапка в 2 колонки 
		     "side content" - сайд-бар + контент
Теперь необходимо присвоить данные имена с помощью следующего свойств:
grid-area: header/side/content; которое прописываем в классе необходимого блока

Общая запись:
grid-template: значение для рядов / значение для колонок;

grid-template:
		[start] "header header" 100px [row2] 
		[row2] "side content" 1fr [row-end] / 150px 1fr;
С помощью записи выше мы задаем имя линии, имя первой строки и ее высоту
потом 2рую строку и ее высоту / ширина первой колонки ширина второй колонки

Если у нас определено 2 ряда по 3 колонки - они будут являтся частью явной сетки
Если при этом появляется 3 ряд с 7 элементом он будет являтся не явным
И для управлением его параметров применяется свойство: 
grid-auto-rows: его значение;
grid-auto-columns - мы можем применить только тогда, когда у нас нет заданной явной сетки, то есть свойства - 
	grid-template

Для автоматического заполнения пространства применяется свойство:
grid-auto-flow: row/columns/dense(заполняет все с изменением последовательности)

Особенности:
1. Если для родителя строчного элемента задан display: grid, то все элементы становятся блочными
2. Если мы задаем маргин блокам, то он не схлопывается
3. margin: auto выравнивает элементы сетки

Размещение элементов с помощью линий сетки:
grid-row-start - номер строки на котором начинается обьект span 2
grid-row-end - номер строки на которой заканчивается обьект
grid-column-start - номер колонки на котором начинается обьект col2 - имя 2рой колонки 
grid-column-end - номер колонки на которой заканчивается обьект
По умолчанию значение авто
Для заполнения обьектом нескольких ячеек так же можно использовать значение span + количество ячеек, 
оно записывается в свойствах выше.
Если мы задаем имена линиям сетки через grid-template, то мы можем позициионировать элементы с помощью 
их имен
Короткая запись:
grid-row: 1 / 2;
grid-column
Значения прописываюстя через слеш

Изменение порядка можно с помощью свойства order: порядковый номер
При его использовании необходимо задать значение для каждого элемента

Выравнивание содержимого элемента
За счет того что значение в align-items justify-items по умолчанию stretch 
элементы заполняют всю доступную ширину и высоту блока

Для расположения элемента по центру сетки используется margin: auto;

Промежутки между элементами задаются свойствами: 
row-gap и column-gap, либо общим свойством gap














